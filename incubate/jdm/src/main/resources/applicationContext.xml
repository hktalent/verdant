<?xml version="1.0" encoding="gb2312"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd"
	default-autowire="byName" default-lazy-init="false">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>				
			</list>
		</property>
	</bean>

	<context:component-scan base-package="com.jsptpd.jdm" />
		
	<!--配置dbcp数据源-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />	
		<property name="url" value="jdbc:oracle:thin:@172.16.241.245:1521:nhorcl" />
		<property name="username" value="dw_mart_flow" />
		<property name="password" value="dw_mart_flow" />
		<property name="initialSize" value="5"/>  
		<property name="maxIdle" value="10"/>  
		<property name="minIdle" value="5"/>  
		<property name="maxActive" value="15"/>  
		<property name="removeAbandoned" value="true"/>  
		<property name="removeAbandonedTimeout" value="180"/>  
		<property name="maxWait" value="3000"/> 
		<property name="testOnBorrow" value="true"/>  
		<property name="validationQuery">  
			<value>select 1 from dual</value>  
		</property>  
	</bean>
	
	<!--指定MyBatis配置文件-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:MyBatis-Configuration.xml" />  
    </bean> 
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
   		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/> 
   		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/> 
   		<property name="basePackage" value="com.jsptpd.dao.mapper" />
    </bean>
    
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="NEVER" />
			<tx:method name="get*" propagation="NEVER" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceMethods"
			expression="execution(* com.jsptpd.jdm.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
		
	<!--注入Bean-->
	<bean class="com.jsptpd.jdm.tools.ApplicationContextUtil"></bean>
	<bean id="serviceMananger" class="com.jsptpd.jdm.ServiceMananger">
		<lookup-method name="getFuncTestService" bean="funcTestService" />
		<lookup-method name="getBuildRegressionService" bean="buildRegressionService" />
		<lookup-method name="getUpdateRegressionService" bean="updateRegressionService" />
	</bean>
</beans>